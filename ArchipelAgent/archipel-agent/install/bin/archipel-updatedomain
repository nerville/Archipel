#!/usr/bin/python -W ignore::DeprecationWarning
# 
# archipel-updatedomain
# 
# Copyright (C) 2010 Antoine Mercadal <antoine.mercadal@inframonde.eu>
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
# 
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.


import os
import sqlite3
import sys
import getopt
import commands

HELP = """\
archipel-updatedomain (c) 2010 Antoine Mercadal
This tool allows you to quicky change the domain of all virtual machines in a hypervisor database.

usage: 
    archipel-updatedomain --file=aFile --domain=aDomain

    --file      : the sqlite3 file of hypervisor
    --domain    : the new domain to use
    --help, -h  : displays this message

"""


def update(dbfile, newdomain):
    db = sqlite3.connect(dbfile)
    c = db.cursor()
    c.execute("select * from virtualmachines")
    
    for vm in c:
        jid, password, date, comment, name = vm
        newjid = jid.split("@")[0] + "@" + newdomain
        
        db.execute("UPDATE virtualmachines SET jid='%s' WHERE jid='%s'" % (newjid, jid))
    db.commit()
    print "\033[32mSUCCESS: domain has been updated to %s in file %s\033[0m" % (newdomain, dbfile)
    
    
if __name__ == "__main__":
    dbfile = None
    domain = None
    try:
        opts, args = getopt.getopt(sys.argv[1:], "h", ["file=", "domain=", "help"])
    
        for o, a in opts:
            if o in ("--file"):
                dbfile = a
            if o in ("--domain"):
                domain = a
            if o in ("-h", "--help"):
                print HELP
                sys.exit(0)
    except Exception as ex:
        print "\033[31mERROR: %s \033[0m\n" % str(ex)

    for p in ("/var/lock/subsys/archipel", "/var/lock/archipel", "/tmp/.lock-archipel"):
        if os.path.exists(p):
            print "\033[31mERROR: Archipel is running. please stop it before running this script\n\033[0m"
            sys.exit(1)

    if not dbfile or not domain :
        print HELP
        sys.exit(-1)

    if not os.path.exists(dbfile):
        print "\033[31mERROR: database %s doesn't exist\n\033[0m" % dbfile
        sys.exit(1)

    update(dbfile, domain)
    